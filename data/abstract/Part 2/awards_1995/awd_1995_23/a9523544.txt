Title       : Interfaces for Parallel and Distributed I/O
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : May 1,  1996        
File        : a9523544

Award Number: 9523544
Award Instr.: Standard Grant                               
Prgm Manager: Mukesh Singhal                          
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : May 1,  1996        
Expires     : April 30,  1998      (Estimated)
Expected
Total Amt.  : $95431              (Estimated)
Investigator: Vaidy S. Sunderam vss@mathcs.emory.edu  (Principal Investigator current)
Sponsor     : Emory University
	      Office of Sponsored Programs
	      Atlanta, GA  30322    404/727-2503

NSF Program : 2876      OPER SYSTEMS AND COMPILERS
Fld Applictn: 0000099   Other Applications NEC                  
              31        Computer Science & Engineering          
Program Ref : 2891,9215,HPCC,
Abstract    :
              The PIOUS system is an experimental software architecture  for efficient data
              management and I/O in heterogeneous  parallel and distributed computing
              environments. PIOUS  offers scalable concurrency control with standard 
              consistency semantics, presents global or segmented views of  parallel files to
              applications, and declusters physical data  for improved performance. 
              Concurrency control in PIOUS is  based on transactions, and permits either
              volatile or stable  file access semantics for increased throughput or
              resilience  to system failures.  The goal of this project is to complete  and
              implement the PIOUS prototype system on the PVM message  passing substrate. 
              The system will consist of an API  library that is designed to present familiar
              file system  syntax and semantics, while permitting multiple concurrent 
              accesses and declustering across multiple disk devices.  The  PIOUS
              infrastructure will  then be further enhanced by designing appropriate file 
              system primitives that will enable the efficient  implementation of high level
              file access semantics and  permit large structured and heterogeneous data sets
              to be  efficiently stored and accessed in distributed networked  environments. 
              An appropriate file model will be defined,  based on an extensible and
              flexible, multilayered  architecture, and will specify a set of access
              interfaces;  these methods will be realized as a suite of portable and 
              efficient runtime libraries and support software.  ***
