Title       : Understanding Object-Oriented Systems Through Visualization
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : August 28,  1996    
File        : a9628149

Award Number: 9628149
Award Instr.: Standard Grant                               
Prgm Manager: Frank D. Anger                          
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : September 15,  1996 
Expires     : August 31,  1998     (Estimated)
Expected
Total Amt.  : $116579             (Estimated)
Investigator: John T. Stasko stasko@cc.gatech.edu  (Principal Investigator current)
Sponsor     : GA Tech Res Corp - GIT
	      Office of Sponsored Programs
	      Atlanta, GA  303320420    404/385-0866

NSF Program : 2880      SOFTWARE ENGINEERING AND LANGU
Fld Applictn: 0000099   Other Applications NEC                  
              31        Computer Science & Engineering          
Program Ref : 9216,HPCC,
Abstract    :
              The object-oriented approach to program design has made a  significant impact on
              the way software is developed and  maintained. Programmers have adopted the
              object-oriented  approach in order to take advantage of better data 
              abstraction, re-use through inheritance, and polymorphism.  However, the very
              features which make the object-oriented  paradigm attractive also make
              object-oriented programs more  difficult to understand. The majority of current
              object-  oriented software development environments and aids provide  textual
              interfaces through which programmers can answer  queries about the program
              state and assess program  performance. The hypothesis of this project is that
              textual  tools for understanding object-oriented programs, although  absolutely
              essential, either fail to provide all the  information required by programmers
              about the dynamics and  global behavior of their code, or they provide
              information  in a manner that is cumbersome to acquire. Program  visualization,
              through the use of graphics and animation,  provides users with a more complete
              understanding of their  code, both statically and dynamically.    The goal of
              this project is to develop a visualization  framework with innovative graphical
              views that assist  programmers to understand, analyze, test, debug, and 
              optimize their code.  The views illustrate both important  details about a
              program and the global context of how  particular pieces of code relate to the
              entire program. An  initial technique being used is called the Information 
              Mural, which presents very large program event traces using  a
              focus-plus-context display. One important aspect of the  work with the
              Information Mural is to identify patterns in  the execution of a program.  ***
