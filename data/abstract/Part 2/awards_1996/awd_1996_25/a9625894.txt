Title       : ViC*: A Compiler and Runtime System for Out-of-Core C*
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : August 2,  1996     
File        : a9625894

Award Number: 9625894
Award Instr.: Standard Grant                               
Prgm Manager: Mukesh Singhal                          
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : August 1,  1996     
Expires     : July 31,  1998       (Estimated)
Expected
Total Amt.  : $109185             (Estimated)
Investigator: Thomas H. Cormen thc@cs.dartmouth.edu  (Principal Investigator current)
Sponsor     : Dartmouth College
	      11 Rope Ferry Road #6210
	      Hanover, NH  037551404    603/646-1110

NSF Program : 2876      OPER SYSTEMS AND COMPILERS
Fld Applictn: 0000099   Other Applications NEC                  
              31        Computer Science & Engineering          
Program Ref : 9216,HPCC,
Abstract    :
              The proposed project completes the implementation, already  underway, of the
              ViC* compiler and run-time system. The  compiler translates the data-parallel
              language C* with some  data explicitly declared to be "out of core."
              Out-of-core  data reside on a parallel disk system. The compiler produces  C
              for a distributed-memory multiprocessor. It adds I/O and  library calls to
              access data on disk, and it also produces  virtual processing loops to allow
              each physical processor to  be shared by multiple parallel-variable elements. 
              A ViC* program will run significantly faster than one run  with traditional
              sequential virtual memory on the individual  nodes of a MIMD machine.  Unlike
              demand paging, ViC* will  take advantage of aggregate data-parallel operations
              by  optimizing away many I/O calls. Moreover, the ViC* run-time  library will
              execute optimal parallel-disk algorithms that  have appeared in the literature
              recently.  There are two major components to ViC*: a compiler and a run  time
              library. Both are designed to minimize the number of  parallel disk accesses
              made by the executing program. The  runtime library will implement the entire
              C* library for  both incore and out-of-core parallel variables. It will run  on
              any platform that supports PVM and any of the following  filesystem interfaces:
              Scotch, Galley, Scalable I/O  Initiative API, and UFS for multiple disks.  ***
