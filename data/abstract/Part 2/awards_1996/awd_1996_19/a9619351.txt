Title       : Getting to the Bottomline in COMA Research: The Illinois Aggressive COMA
               Multiprocessor (I-ACOMA)
Type        : Award
NSF Org     : EIA 
Latest
Amendment
Date        : April 28,  1997     
File        : a9619351

Award Number: 9619351
Award Instr.: Standard Grant                               
Prgm Manager: Michael J. Foster                       
	      EIA  DIVISION OF EXPERIMENTAL & INTEG ACTIVIT
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : May 1,  1997        
Expires     : April 30,  1999      (Estimated)
Expected
Total Amt.  : $455000             (Estimated)
Investigator: Josep Torrellas torrella@cs.uiuc.edu  (Principal Investigator current)
              David A. Padua  (Co-Principal Investigator current)
Sponsor     : U of Ill Urbana-Champaign
	      801 South Wright Street
	      Champaign, IL  61820    217/333-2186

NSF Program : 4725      EXPERIMENTAL SYSTEMS PROGRAM
Fld Applictn: 0510403   Engineering & Computer Science          
Program Ref : 2891,9215,9218,HPCC,
Abstract    :
              The goal of this project is to explore the systems architecture of high-end 
              computers to be built a decade from now.  A proposed architecture that combines
               COMA and NUMA designs is being used to explore architectural, applications,
              and  compiler issues.  Tools used in the study include an execution-driven
              simulator,  an address tracer, state of the art parallelizing compiler and
              database systems,  and many workloads.  The architectural issues to be explored
              include  organizations that merge COMA and NUMA coherence, new uses for cache
              tags, and  design of coherence protocols.  Software issues include address
              translation and  memory management within the operating system for a simple
              COMA, new uses of the  data replication that occurs for share data in COMA,
              compilation of parallel code  for cache-coherent architectures, and compilation
              of explicit data transfers in  parallel code into instructions for prefetching
              and forwarding of data.
