Title       : Interactive Tutorial Experiences for Introductory Computer Science
Type        : Award
NSF Org     : DUE 
Latest
Amendment
Date        : February 18,  1997  
File        : a9652982

Award Number: 9652982
Award Instr.: Standard Grant                               
Prgm Manager: Jane C. Prey                            
	      DUE  DIVISION OF UNDERGRADUATE EDUCATION     
	      EHR  DIRECT FOR EDUCATION AND HUMAN RESOURCES
Start Date  : March 1,  1997      
Expires     : February 28,  1998   (Estimated)
Expected
Total Amt.  : $50000              (Estimated)
Investigator: Joseph F. Kent jkent@richmond.edu  (Principal Investigator current)
              Lewis Barnett  (Co-Principal Investigator current)
Sponsor     : University of Richmond
	      
	      Richmond, VA  23173    804/289-8100

NSF Program : 7410      DUE COURSE & CURRICULUM PROG
Fld Applictn: 0000099   Other Applications NEC                  
Program Ref : 7419,9178,SMET,
Abstract    :
               Students in the introductory computer science courses are faced with a
              bewildering array of new concepts, ranging from strange (but fundamental)
              notions like recursion to more mundane concerns such as how to make best use of
              programming tools. That students benefit from experiential, exploratory
              reinforcement of these concepts has been the basis of the movement toward
              closed laboratories in introductory computer science in recent years. Closed
              laboratories come with their own set of problems, ranging from the need for
              dedicated laboratory facilities to administrative problems with staffing and
              scheduling four hour courses with closed laboratory components.  This project
              develops a set of highly interactive tutorial exercises covering topics
              addressed in the typical introductory computer science curriculum. The
              exercises allow students to manipulate inputs and guide processes illustrating
              basic concepts and to observe the effects of their activity visually. These
              tutorials will be delivered via the World Wide Web, and constructed with the
              Java programming language. This choice of development language and delivery
              system has several benefits: the tutorials will be highly platform independent;
              they will be less server intensive than other Web-based mechanisms for creating
              interactive applications; dedicated laboratory facilities are not necessary
              since students can run browsers on their own computers; and CD-ROM versions of
              the tutorials would allow stand-alone use even when network connections are not
              available.
