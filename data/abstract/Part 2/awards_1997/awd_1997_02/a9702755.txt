Title       : CAREER: Developing Secure Systems for Network Appliances
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : June 23,  2000      
File        : a9702755

Award Number: 9702755
Award Instr.: Continuing grant                             
Prgm Manager: Mukesh Singhal                          
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : April 1,  1997      
Expires     : March 31,  2001      (Estimated)
Expected
Total Amt.  : $205000             (Estimated)
Investigator: Thorsten von Eicken tve@cs.cornell.edu  (Principal Investigator current)
Sponsor     : Cornell University-Endowed
	      Office of Sponsored Programs
	      Ithaca, NY  148532801    607/255-5014

NSF Program : 2876      OPER SYSTEMS AND COMPILERS
Fld Applictn: 0000099   Other Applications NEC                  
Program Ref : 1045,1187,2891,9216,HPCC,
Abstract    :
              The current information revolution is stimulating the  emergence of new
              computing devices, here called network  appliances, that connect to the
              information infrastructure,  interact with the real world, and can be
              programmed to  perform custom functions. The limited resources available on 
              most appliances will create a need for in-network servers  supplying CPU cycles
              and storage. These servers will host  proxy services as well as application
              specific gateways.  This project will research the design and implementation of
               computer systems for network appliances and the related in-  network servers.
              This includes developments at the level of  the operating system, programming
              languages, and the run-  time system. More concretely, the research will
              develop  around the Secure Language Kernel (SLK) operating system  being
              developed. SLK relies on the type safety properties of  the language system in
              order to enforce protection  boundaries between applications and the OS itself,
              which  means that all code can run in a single address space, and  at a single
              hardware privilege level. The expected benefits  of this approach are higher
              resource efficiency, seamless  system extensibility, and flexibility in the
              form of fine  grain sharing across protection domains.***
