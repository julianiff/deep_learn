Title       : A Formal Architecture-Based Approach to Software IntegrationTesting
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : June 17,  1998      
File        : a9710078

Award Number: 9710078
Award Instr.: Continuing grant                             
Prgm Manager: Frank D. Anger                          
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : August 15,  1997    
Expires     : July 31,  1999       (Estimated)
Expected
Total Amt.  : $180000             (Estimated)
Investigator: Alexander L. Wolf alexander.wolf@colorado.edu  (Principal Investigator current)
Sponsor     : U of Colorado Boulder
	      3100 Marine Street, Room 481
	      Boulder, CO  803090572    303/492-6221

NSF Program : 2880      SOFTWARE ENGINEERING AND LANGU
Fld Applictn: 0000099   Other Applications NEC                  
Program Ref : 9216,HPCC,
Abstract    :
              9710078  A formal software architecture specification makes the analysis, 
              design, and construction of a complex system intellectually  tractable by
              characterizing the system at a high level of  abstraction. This project focuses
              on revealing defects in the  dynamic interaction and communication behavior of
              system  components through testing techniques applied at the  architectural
              level. While testing has historically concentrated  on the implementation as
              the target of inquiry, this research  instead considers the architectural
              specification of the  system as the target. There are five major contributions
              to  software architecture and software testing technology arising  from this
              research. First, a set of architecture-based  integration test criteria are
              defined to provide requirements for  testing architectural aspects of a system;
              methods are also  developed for applying these criteria to architectural styles
              and  domain-specific architectures. Second, methods are developed for  testing
              an implementation in terms of its conformance to a  specified architecture via
              architecture conformance oracles.  Third, architecture-level slicing techniques
              are defined for  localizing architectural defects and minimizing regression 
              testing. Fourth, methods are developed for using feature tests  to discover the
              architecture of a system from its implementation.  In addition, various
              approaches to formal architecture  specification are evaluated with respect to
              their suitability to  testing technologies.  ***
