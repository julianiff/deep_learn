Title       : CAREER: Probabilistic and Algebraic Techniques for Computational Complexity
               Theory
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : April 24,  1998     
File        : a9734164

Award Number: 9734164
Award Instr.: Continuing grant                             
Prgm Manager: Yechezkel Zalcstein                     
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : May 1,  1998        
Expires     : April 30,  2002      (Estimated)
Expected
Total Amt.  : $201861             (Estimated)
Investigator: D. Sivakumar siva@cs.uh.edu  (Principal Investigator current)
Sponsor     : U of Houston
	      4800 Calhoun Boulevard
	      Houston, TX  772042015    713/743-9222

NSF Program : 2860      THEORY OF COMPUTING
Fld Applictn: 0000099   Other Applications NEC                  
Program Ref : 1045,9216,HPCC,
Abstract    :
              The focus of the research activity is developing new tools  and techniques for
              attacking fundamental problems in  computational complexity theory. One thrust
              is the search  for adaptations of the probabilistic method of Paul Erdos to 
              uniform complexity theory.  A second thrust is the  investigation of the
              connections between various questions  in complexity theory and various
              structural and algorithmic  questions concerning robust error-correcting codes,
              and  related algebraic and geometric structures.  In addition to  contributions
              to complexity theory, this research has the  potential for making contributions
              to the probabilistic  method; derandomization and coding theory. The
              educational  activities are centered around the broader goal of designing  an
              undergraduate curriculum in theoretical computer science  for the new
              millennium.  The motivation stems from the  growing importance of program
              correctness, and from the need  to design theory curricula relevant to and
              reflecting the  changing role of computer science.  The educational activity 
              integrates and unifies discrete mathematics, automata and  formal language
              theory, program verification and  correctness, and computational complexity
              theory.  A  highlight is a novel application of automata theory as an 
              effective playground for teaching program correctness. The  educational
              activities also include developing a curriculum  in algorithm engineering, with
              a vision to integrate  research, education, experimentation and training in 
              algorithm design and implementation, and with specific goals  to develop
              ultra-efficient implementations of fundamental  algorithms for massive data
              sets.
