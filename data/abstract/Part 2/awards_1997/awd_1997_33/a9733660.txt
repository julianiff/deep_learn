Title       : CAREER: A Model For Designing Adaptable Software Components
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : January 31,  2003   
File        : a9733660

Award Number: 9733660
Award Instr.: Continuing grant                             
Prgm Manager: Sol J. Greenspan                        
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : April 1,  1998      
Expires     : March 31,  2003      (Estimated)
Expected
Total Amt.  : $205000             (Estimated)
Investigator: George T. Heineman heineman@cs.wpi.edu  (Principal Investigator current)
Sponsor     : Worcester Polytech Inst
	      100 Institute Road
	      Worcester, MA  016092247    508/831-5000

NSF Program : 2880      SOFTWARE ENGINEERING AND LANGU
Fld Applictn: 0000099   Other Applications NEC                  
Program Ref : 1045,1187,9216,HPCC,
Abstract    :
              9733660  Heineman  This research focuses on novel techniques for designing 
              software components that provide a mechanism for adapting  their behavior.
              Traditional approaches to component reuse  are limited in that a component must
              exactly meet the needs  of an application builder before it can be reused. This
               research proposes a new direction by suggesting that  component-based software
              development will only occur when  application builders can adapt software
              components to suit  their needs. The first objective is to aid component 
              designers in designing and implementing highly reusable  components. The
              language-independent solution proposed by  this research applies equally well
              to components written in  C, C++, or Java. The second objective is to provide
              an  architectural description language for specifying  adaptations to
              individual components as needed for a target  application. The third objective
              is to construct a design  tool that helps users compose applications from
              adaptable  components. A fourth objective is to define a reengineering 
              methodology for retrofitting existing legacy code into  adaptable components. A
              final objective is to train our  students in designing highly reusable software
              components  and building applications from software components. This  research
              will greatly increase the ability to create large,  complex systems from
              independently implemented software  components.  ***
