Title       : Educational Innovation: Exploring a Safe Approach to Software Engineering
Type        : Award
NSF Org     : EIA 
Latest
Amendment
Date        : July 6,  2001       
File        : a9713032

Award Number: 9713032
Award Instr.: Standard Grant                               
Prgm Manager: Harry G. Hedges                         
	      EIA  DIVISION OF EXPERIMENTAL & INTEG ACTIVIT
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : August 1,  1997     
Expires     : July 31,  2002       (Estimated)
Expected
Total Amt.  : $498487             (Estimated)
Investigator: Robert S. Cartwright cork@rice.edu  (Principal Investigator current)
              Peter Druschel  (Co-Principal Investigator current)
              Devika Subramanian  (Co-Principal Investigator current)
              Matthias Felleisen  (Co-Principal Investigator current)
Sponsor     : William Marsh Rice Univ
	      6100 Main Street, MS-16
	      Houston, TX  772511892    713/348-4820

NSF Program : 2885      CISE RESEARCH INFRASTRUCTURE
Fld Applictn: 0000099   Other Applications NEC                  
Program Ref : 2888,9218,HPCC,
Abstract    :
              9713032  Rice University  R. Cartwright    CISE Educational Innovation:
              Exploring A Safe Approach to Software Engineering    This CISE Educational
              Innovation award supports the development of a new undergraduate course
              sequence in software engineering that focuses on emerging principles of program
              design and validation applicable to type-safe languages.  These courses are
              built on the high-level design principles incorporated in the new introductory
              programming sequence at Rice and draw on recent research in algorithmic
              verification through soft typing and modular program composition.  Two courses,
              targeted at upper-level undergraduates, are being developed.  The first course
              is a foundations course using safe languages that focuses on the principles of
              program and module design, verification, debugging, and performance tuning and
              the second is an interdisciplinary studio course that applies the principles of
              the foundations course to writing innovative networking software.  These
              courses have the potential to make major impact on course work in software
              engineering in the future.
