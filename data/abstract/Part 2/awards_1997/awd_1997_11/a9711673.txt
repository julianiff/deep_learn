Title       : Compiling with Persistence
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : July 29,  1997      
File        : a9711673

Award Number: 9711673
Award Instr.: Standard Grant                               
Prgm Manager: Mukesh Singhal                          
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : August 1,  1997     
Expires     : July 31,  2000       (Estimated)
Expected
Total Amt.  : $185000             (Estimated)
Investigator: Antony L. Hosking   (Principal Investigator current)
Sponsor     : Purdue Research Foundation
	      
	      West Lafayette, IN  47907    317/494-6200

NSF Program : 2876      OPER SYSTEMS AND COMPILERS
Fld Applictn: 0000099   Other Applications NEC                  
Program Ref : 2891,9216,HPCC,
Abstract    :
              The Compass project is charting a course towards cooperative  compiler and
              run-time support for applications that manage  large bodies of long-lived,
              shared, structured data.  The  project integrates programming language and
              database  functionality to provide orthogonal data persistence,  enabling the
              construction of more reliable data-intensive  applications, but without
              compromising performance.  Performance is obtained through application of
              modern  compilation techniques to the problems of persistence,  including
              static analysis and run-time profiling, to derive  knowledge of
              application-specific behavior which can then be  exploited by both the
              compiler, for program optimization,  and the run-time system, for efficient
              data management.  Compass project goals include development, integration and 
              evaluation of new language-independent compiler analyses and  optimizations for
              persistence, with associated run-time  strategies for persistent object
              management.  These  techniques are being evaluated empirically through 
              development of prototype persistent languages and systems,  compilation of
              benchmark persistent applications, and  measurement of application performance.
               The compilation and  run-time strategies derive much of their power from 
              treatment of the entire persistent application system,  consisting of both
              stored persistent code and data, for  "whole-application" analysis and
              optimization.
