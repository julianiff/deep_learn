Title       : CAREER: Dynamic Optimization of Software Component Systems
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : January 7,  2000    
File        : a9701400

Award Number: 9701400
Award Instr.: Continuing grant                             
Prgm Manager: Mukesh Singhal                          
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : March 1,  1997      
Expires     : February 28,  2001   (Estimated)
Expected
Total Amt.  : $210000             (Estimated)
Investigator: Michael Franz franz@ics.uci.edu  (Principal Investigator current)
Sponsor     : U of Cal Irvine
	      160 Administration Building
	      Irvine, CA  926971875    949/824-7106

NSF Program : 2876      OPER SYSTEMS AND COMPILERS
Fld Applictn: 0000099   Other Applications NEC                  
Program Ref : 1045,2891,9216,HPCC,
Abstract    :
              An existing component-oriented software system that is based on  a
              platform-independent software distribution format will be  augmented by a
              dynamic re-optimizer. The existing system  already employs load-time code
              generation that happens in a  single burst and puts compilation speed ahead of
              code quality,  so that program execution can commence immediately. The 
              additional re-optimizer will improve this situation by  continually
              re-generating the object code of all active  software components in the
              background, applying aggressive  intermodular optimization techniques. Hence,
              it will combine a  collection of independently compiled and distributed
              software  components into a single, fully cross-optimized, quasi-  monolithic
              code image, and then supplant the currently  executing version of the code by
              the newly generated image. Re-  optimization will be guided by run-time
              profiling data, so that  successive re-optimizations will adapt to shifting
              usage  patterns. Dynamic code generation will enable component-  oriented
              systems to match or even surpass the efficiency of  statically optimized
              software, in spite of being extensible at  run-time. Concurrently with this
              research, a new upper-division  undergraduate course sequence on language
              implementation will  be developed.***
