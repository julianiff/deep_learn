Title       : CAREER: Engineering High-Quality Concurrent Software
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : November 30,  2000  
File        : a9703094

Award Number: 9703094
Award Instr.: Continuing grant                             
Prgm Manager: Jon S. Rugaber                          
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : June 15,  1997      
Expires     : May 31,  2002        (Estimated)
Expected
Total Amt.  : $200502             (Estimated)
Investigator: Matthew Dwyer dwyer@cis.ksu.edu  (Principal Investigator current)
Sponsor     : Kansas State University
	      2 Fairchild Hall
	      Manhattan, KS  665061103    913/532-6222

NSF Program : 2880      SOFTWARE ENGINEERING AND LANGU
Fld Applictn: 0000099   Other Applications NEC                  
Program Ref : 1045,1187,2891,9150,9216,HPCC,
Abstract    :
              An integrated program of research will develop techniques  for building
              concurrent software and techniques for  specifying properties of and validating
              concurrent software.  The construction of concurrent software is supported by 
              engineering coordination abstractions that capture common  patterns of
              communication, synchronization and process inter-  connectivity.  This work
              focuses on development of  abstractions that satisfy the needs of a class of
              real-world  problems, specifically scientific computing problems.  The 
              effectiveness of these abstractions is evaluated by applying  them to the
              solution of real-world problems.  Measurement of  development costs for
              solutions developed using abstractions  and alternative concurrent programming
              technologies will  form the basis of empirical evaluation to characterize the 
              relative merits of coordination abstractions.  The  validation of
              specifications of correctness properties of  concurrent software is
              investigated using a program flow  analysis called FLAVERS.  This work focuses
              on incorporation  of abstractions in FLAVERS to increase both the speed of 
              analysis and the accuracy of analysis results.  Evaluation  of the
              effectiveness of FLAVERS is assessed by applying it  to the verification of
              common classes of correctness  properties and to real-world concurrent
              applications, such  as those built with coordination abstractions.
