Title       : Teaching Multithreaded Programming to Computer Science Undergraduates
Type        : Award
NSF Org     : DUE 
Latest
Amendment
Date        : February 6,  1998   
File        : a9752244

Award Number: 9752244
Award Instr.: Standard Grant                               
Prgm Manager: C. Dianne Martin                        
	      DUE  DIVISION OF UNDERGRADUATE EDUCATION     
	      EHR  DIRECT FOR EDUCATION AND HUMAN RESOURCES
Start Date  : March 1,  1998      
Expires     : May 31,  1999        (Estimated)
Expected
Total Amt.  : $50002              (Estimated)
Investigator: Ching-Kuang Shene shene@mtu.edu  (Principal Investigator current)
              Steven M. Carr  (Co-Principal Investigator current)
Sponsor     : Mich Technological Univ
	      1400 Townsend Drive
	      Houghton, MI  499311295    906/487-1885

NSF Program : 7410      DUE COURSE & CURRICULUM PROG
Fld Applictn: 0000099   Other Applications NEC                  
Program Ref : 7419,9178,SMET,
Abstract    :
              With the continuing emergence of multithreaded computation as a powerful vehicle
              for science and engineering, the need for an introduction to multithreaded
              programming for scientists and engineers is high. All popular operating systems
              already support multithreaded programming and the popular POSIX Pthreads
              standard has just been approved. It is the right time to teach students this
              new technology. In so doing, students will be able to carry the skills over to
              their jobs and increase this nation's competitiveness.     The primary goal of
              the project is to design a set of comprehensive and flexible course materials
              for teaching multithreaded programming to sophomore and junior students so that
              it can be used across several courses or in a dedicated one. A secondary goal
              is to develop pedagogical programming aids for the students to visualize and
              experiment with various concepts in multithreaded programming. These concepts
              include program behavior and execution visualization, deadlock and race
              condition detection, and software metrics for measuring the complexity of
              students' programs.     By consolidating many potential uses in a single place,
              this proposed project will improve students' understanding of multithreaded
              programming so that it can be used in several courses and applications. A basic
              understanding of the technology will help non-CS students to enhance their
              level of competence and allow them to use multithreaded programming with
              confidence in their respective fields. The impact of this project may also
              include an improved retention rate of students and an increased employability
              of graduates in multithreaded application and system software development.
