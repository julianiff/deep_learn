Title       : Advanced Languages for Scientific Computation Environments
Type        : Award
NSF Org     : EIA 
Latest
Amendment
Date        : June 27,  2000      
File        : a9706572

Award Number: 9706572
Award Instr.: Continuing grant                             
Prgm Manager: Mita D. Desai                           
	      EIA  DIVISION OF EXPERIMENTAL & INTEG ACTIVIT
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : September 15,  1997 
Expires     : August 31,  2002     (Estimated)
Expected
Total Amt.  : $1594310            (Estimated)
Investigator: Guy E. Blelloch blelloch@cs.cmu.edu  (Principal Investigator current)
              Peter Lee  (Co-Principal Investigator current)
              Gary L. Miller  (Co-Principal Investigator current)
              Robert W. Harper  (Co-Principal Investigator current)
Sponsor     : Carnegie Mellon University
	      5000 Forbes Avenue
	      Pittsburgh, PA  152133815    412/268-5835

NSF Program : 4725      EXPERIMENTAL SYSTEMS PROGRAM
Fld Applictn: 0000099   Other Applications NEC                  
Program Ref : 2891,9216,HPCC,
Abstract    :
              The goal of the project is to demonstrate the feasibility of a  broad-based
              language for scientific and engineering computation.  Such a language should
              serve equally well for developing  production scientific code (which is now
              typically written in  FORTRAN or C) and as the scripting language for
              interactive  scientific computing environments (such as Mathematica or 
              Matlab).  This breadth would greatly simplify the development of  code by
              allowing a clean transition from prototyping and small-  scale experiments to
              full production code, and would better  support the evolution of production
              code.  As a broad-based  language it should support both numerical and symbolic
               computation, should include constructs r parallel programming,  and should
              include the high-level language features found in  systems such as Mathematica
              (e.g. pattern matching, higher-order  functions, and automatic memory
              management).  The project  involves demonstrating that it is possible to
              support these  features while maintaining good code efficiency.  As such, the 
              project includes work on compiler techniques, on language design,  on the
              development of scientific codes, and experimentation on  the codes using the
              compiler and language.  The project is using  ML extended with the parallel
              constructs from NESL as a testbed.
