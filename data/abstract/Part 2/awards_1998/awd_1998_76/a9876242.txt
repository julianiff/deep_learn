Title       : CAREER: Tabled Logic Programming for Verification and Program Analysis
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : April 26,  2002     
File        : a9876242

Award Number: 9876242
Award Instr.: Continuing grant                             
Prgm Manager: Sol J. Greenspan                        
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : August 1,  1999     
Expires     : July 31,  2003       (Estimated)
Expected
Total Amt.  : $203416             (Estimated)
Investigator: C. R. Ramakrishnan cram@cs.sunysb.edu  (Principal Investigator current)
Sponsor     : SUNY Stony Brook
	      
	      Stony Brook, NY  117943362    631/632-9949

NSF Program : 2880      SOFTWARE ENGINEERING AND LANGU
Fld Applictn: 0000099   Other Applications NEC                  
Program Ref : 1045,9216,HPCC,
Abstract    :
              9876242   Ramakrishnan, C. R. 
Tabled resolution for logic programs addresses
              the major shortcomings of Prolog-style resolution, namely, weak termination,
              repeated subcomputations, and weak semantics for negation.  Tabled logic
              programming enables development of many applications at a high level without
              sacrificing efficiency.  For instance, techniques used for program analysis and
              verification, such as model checking and abstract interpretation, can be
              implemented using tabling by treating the semantic equations as logic rules.
              This project focusses on (i)  exploiting the power of current tabled resolution
              systems to construct high-performance program analyzers and model checkers for
              systems specified in various process languages and properties specified using
              different temporal logics;  (ii)  extending tabling methods to constraint logic
              programs, thereby tackling new applications, such as verification of
              infinite-state and real-time systems; and  (iii) 	integrating deductive
              strategies (traditionally used by theorem provers) into model checkers by
              combining tabled resolution with program transformation techniques.  This
              combination offers novel solutions to problems such as verification of
              parameterized systems, analysis of security vulnerabilities of computer
              systems, and scheduling in workflow systems.  The project plans to incorporate
              research results into the classroom by adding a two-week unit on program
              analysis to a Compiler Design course, and developing new courses on computer
              security and program transformations.

