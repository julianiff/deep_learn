Title       : Coupling-Based Analysis for Integration Testing of Object-Oriented Software
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : June 23,  1998      
File        : a9804111

Award Number: 9804111
Award Instr.: Standard Grant                               
Prgm Manager: Jon S. Rugaber                          
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : July 1,  1998       
Expires     : June 30,  2002       (Estimated)
Expected
Total Amt.  : $200000             (Estimated)
Investigator: Jefferson A. Offutt ofut@ise.gmu.edu  (Principal Investigator current)
Sponsor     : George Mason University
	      4400 University Drive
	      Fairfax, VA  220304443    703/993-1000

NSF Program : 2880      SOFTWARE ENGINEERING AND LANGU
Fld Applictn: 0000099   Other Applications NEC                  
Program Ref : 9216,HPCC,
Abstract    :
              9804111  This research project attempts to develop new ways to analyze and  test
              the integration aspects of software components, particularly  for
              object-oriented software. As more software is developed using  object-based
              designs and object-oriented languages, the problems  of integrating the
              components become more crucial to the success  of the software. This research
              project addresses these  integration problems through software couplings, which
              are the  paths through which software components communicate. The project 
              applies coupling in four related directions. (1) Develop  practical, effective,
              formalizable, automatable techniques for  testing connections between
              components during software  integration. (2) Extend and refine traditional
              coupling metric  definitions to handle language features of modern languages.
              Use  couplings to develop precise measurements, and develop complete 
              algorithms for measuring complexity based on couplings. (3)  Develop algorithms
              for using couplings to compute how much a  proposed change will affect the rest
              of the system. This change  impact analysis is used for planning, cost
              estimation, and  decision making. (4) Finally, use couplings to determine the 
              amount of regression testing that needs to be done after a  maintenance change
              is made.***
